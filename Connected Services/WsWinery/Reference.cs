//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WineryExportWS.WsWinery {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.progamma.com", ConfigurationName="WsWinery.WswineryclassSoap")]
    public interface WswineryclassSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_DOExecute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        object ID_DOExecute(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_DOExecute", ReplyAction="*")]
        System.Threading.Tasks.Task<object> ID_DOExecuteAsync(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_ReceiveFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string ID_ReceiveFile([System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] FileData, string Extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_ReceiveFile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ID_ReceiveFileAsync([System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] FileData, string Extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_SendFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        byte[] ID_SendFile(string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ID_SendFile", ReplyAction="*")]
        [return: System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        System.Threading.Tasks.Task<byte[]> ID_SendFileAsync(string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ProcessafileStrumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string ProcessafileStrumento(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva, string ppNomeFileDaStrumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/ProcessafileStrumento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ProcessafileStrumentoAsync(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva, string ppNomeFileDaStrumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string Login(string ppUsername, string ppPassword, string ppPartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string ppUsername, string ppPassword, string ppPartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/Processafileconferimenti", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        string Processafileconferimenti(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/Processafileconferimenti", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ProcessafileconferimentiAsync(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/AcquisiscifileAnalisi", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        int AcquisiscifileAnalisi(string ppNomefile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.progamma.com/AcquisiscifileAnalisi", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AcquisiscifileAnalisiAsync(string ppNomefile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WswineryclassSoapChannel : WineryExportWS.WsWinery.WswineryclassSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WswineryclassSoapClient : System.ServiceModel.ClientBase<WineryExportWS.WsWinery.WswineryclassSoap>, WineryExportWS.WsWinery.WswineryclassSoap {
        
        public WswineryclassSoapClient() {
        }
        
        public WswineryclassSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WswineryclassSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WswineryclassSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WswineryclassSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object ID_DOExecute(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc) {
            return base.Channel.ID_DOExecute(DOXML, MethodName, ClassName, Params, RetDoc);
        }
        
        public System.Threading.Tasks.Task<object> ID_DOExecuteAsync(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc) {
            return base.Channel.ID_DOExecuteAsync(DOXML, MethodName, ClassName, Params, RetDoc);
        }
        
        public string ID_ReceiveFile(byte[] FileData, string Extension) {
            return base.Channel.ID_ReceiveFile(FileData, Extension);
        }
        
        public System.Threading.Tasks.Task<string> ID_ReceiveFileAsync(byte[] FileData, string Extension) {
            return base.Channel.ID_ReceiveFileAsync(FileData, Extension);
        }
        
        public byte[] ID_SendFile(string FileName) {
            return base.Channel.ID_SendFile(FileName);
        }
        
        public System.Threading.Tasks.Task<byte[]> ID_SendFileAsync(string FileName) {
            return base.Channel.ID_SendFileAsync(FileName);
        }
        
        public string ProcessafileStrumento(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva, string ppNomeFileDaStrumento) {
            return base.Channel.ProcessafileStrumento(ppNomeFile, ppUsername, ppPassword, ppPartitaIva, ppNomeFileDaStrumento);
        }
        
        public System.Threading.Tasks.Task<string> ProcessafileStrumentoAsync(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva, string ppNomeFileDaStrumento) {
            return base.Channel.ProcessafileStrumentoAsync(ppNomeFile, ppUsername, ppPassword, ppPartitaIva, ppNomeFileDaStrumento);
        }
        
        public string Login(string ppUsername, string ppPassword, string ppPartitaIva) {
            return base.Channel.Login(ppUsername, ppPassword, ppPartitaIva);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string ppUsername, string ppPassword, string ppPartitaIva) {
            return base.Channel.LoginAsync(ppUsername, ppPassword, ppPartitaIva);
        }
        
        public string Processafileconferimenti(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva) {
            return base.Channel.Processafileconferimenti(ppNomeFile, ppUsername, ppPassword, ppPartitaIva);
        }
        
        public System.Threading.Tasks.Task<string> ProcessafileconferimentiAsync(string ppNomeFile, string ppUsername, string ppPassword, string ppPartitaIva) {
            return base.Channel.ProcessafileconferimentiAsync(ppNomeFile, ppUsername, ppPassword, ppPartitaIva);
        }
        
        public int AcquisiscifileAnalisi(string ppNomefile) {
            return base.Channel.AcquisiscifileAnalisi(ppNomefile);
        }
        
        public System.Threading.Tasks.Task<int> AcquisiscifileAnalisiAsync(string ppNomefile) {
            return base.Channel.AcquisiscifileAnalisiAsync(ppNomefile);
        }
    }
}
